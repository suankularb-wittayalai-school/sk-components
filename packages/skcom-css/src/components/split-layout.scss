////
/// **Vertical Split Layout**
///
/// List-detail views and supporting panel layouts can be created with Vertical
/// Split Layout.
///
/// In a list-detail view, the left side is a list and the right is the listâ€™s
/// detail. In a supporting panel layout, the main content takes focus with a
/// small column set aside for supporting content.
///
/// @link https://m3.material.io/foundations/adaptive-design/canonical-layouts#709b81d6-07a0-41f2-87c1-eb172e04a01d Material Design on list-detail view
/// @link https://m3.material.io/foundations/adaptive-design/canonical-layouts#4e86e13d-cea9-4b5d-8301-8905a50e43f9 Material Design on supporting panel view
///
/// @link https://docs.google.com/document/d/1UJeTpXcB2MBL9Df4GUUeZ78xb-RshNIC_-LCIKmCo-8/edit?usp=sharing#heading=h.iv2gnmudjnme SKCom documentation
////

@use "../abstracts/mixins.scss" as mix;

.skc-split-layout {
  display: grid;
  gap: 0.5rem 1.5rem;
  grid-template-columns: 1fr;

  :last-child {
    display: none;
  }
}

.skc-split-layout--persist-right :last-child {
  display: block;
}

@include mix.breakpoint("sm") {
  .skc-split-layout {
    height: calc(100vh - 12rem);

    :last-child {
      display: block;
    }
  }

  .skc-split-layout--list-detail {
    grid-template-columns: 1fr 1fr;
  }

  .skc-split-layout--supporting-panel {
    grid-template-columns: 5fr 3fr;
  }

  @supports (height: 100dvh) {
    .skc-split-layout {
      height: calc(100vh - 12rem);
    }
  }
}

@include mix.breakpoint("md") {
  .skc-split-layout--list-detail {
    grid-template-columns: 1fr 2fr;
  }

  .skc-split-layout--supporting-panel {
    grid-template-columns: 3fr 1fr;
  }
}
