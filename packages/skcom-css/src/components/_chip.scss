////
/// Chips are pieces of content that are either dynamically generated or
/// provided by the user.
///
/// Note:
/// - There is no entry for Chip in the SKCom documentation.
/// - This file is a compilation of 4 types of Chips. More details on each
///   below.
////

@use "sass:math";
@use "../abstracts/mixins.scss" as mix;
@use "../abstracts/typography.scss" as type;

// Base Chip
.skc-chip {
  @include mix.transition(
    border-color background-color,
    var(--motion-short-4),
    var(--easing-standard)
  );
  position: relative;
  display: flex;
  overflow: hidden;
  align-items: center;
  flex-direction: row;
  justify-content: center;
  gap: 0.5rem;
  padding: 0.375rem 1rem;
  cursor: pointer;
  color: var(--on-surface);
  border: 1px solid var(--outline);
  border-radius: 0.5rem;
  background-color: transparent;
  -webkit-tap-highlight-color: transparent;

  // State layer
  &::before {
    @include mix.state-layer();
    background-color: var(--on-surface-variant);
  }

  &:hover::before {
    opacity: 0.08;
  }

  &:focus,
  &:active {
    &::before {
      opacity: 0.12;
    }
  }

  &:has(.skc-chip__icon:first-child) {
    padding-left: 0.5rem;
  }

  &:has(.skc-chip__icon:last-child) {
    padding-right: 0.5rem;
  }

  // Disabled
  &[aria-disabled="true"] {
    overflow: visible;
    cursor: default;
    opacity: 0.38;
    color: var(--on-surface);
    border-color: transparent;

    &::before {
      inset: -1px;
      opacity: math.div(0.12, 0.38);
      border: 1px solid var(--on-surface);
      background-color: transparent;
    }

    .skc-chip__ripple {
      background-color: transparent;
    }

    .skc-chip__icon .skc-icon {
      color: var(--on-surface);
    }
  }
}

// Elevated
.skc-chip--elevated {
  border: none;
  background-color: var(--surface-1);
  box-shadow: var(--shadow-1);

  // Selected
  &.skc-chip--selected {
    background-color: var(--secondary-container);
  }

  // Disabled
  &[aria-disabled="true"] {
    color: var(--on-surface);
    background-color: transparent;
    box-shadow: none;

    &::before {
      border: none;
      background-color: var(--on-surface);
    }
  }
}

// Dangerous
.skc-chip--dangerous {
  .skc-chip__icon .skc-icon {
    color: var(--error);
  }
}

// Selected
.skc-chip--selected {
  color: var(--on-secondary-container);
  border-color: transparent;
  background-color: var(--secondary-container);
}

// Label
.skc-chip__label {
  @include type.font("label-large");
  font-family: var(--font-display);
  white-space: nowrap;
}

// Icon
.skc-chip__icon {
  width: 1.125rem;
  height: 1.125rem;
  color: var(--primary);

  .skc-icon {
    @include mix.icon(0, 400, 0, 24);
    font-size: 1.125rem;
  }
}

// Trailing button
.skc-chip__trailing-button {
  padding: 0.1875rem;
  color: var(--on-surface);

  .skc-button__icon {
    width: 1.125rem;
    height: 1.125rem;
  }

  .skc-button__icon .skc-icon,
  &:hover .skc-button__icon .skc-icon,
  &:active .skc-button__icon .skc-icon {
    font-size: 1.125rem;
  }

  &::before,
  .skc-button__ripple {
    background-color: var(--on-surface);
  }
}

// Ripple
.skc-chip__ripple {
  @include mix.ripple();
  background-color: var(--on-surface-variant);
}
