////
/// **Text Field**
/// A place for users to enter text.
///
/// @link https://docs.google.com/document/d/1UJeTpXcB2MBL9Df4GUUeZ78xb-RshNIC_-LCIKmCo-8/edit?usp=sharing#heading=h.9oc937dbw2xq SKCom documentation
////

@use "sass:math";
@use "../abstracts/mixins.scss" as mix;
@use "../abstracts/typography.scss" as type;

// Base Text Field
.skc-text-field {
  @include mix.transition(
    border-color,
    var(--motion-short-4),
    var(--easing-standard)
  );
  position: relative;
  display: flex;
  align-items: center;
  flex-direction: row;
  min-height: 3.5rem;

  .skc-text-field__input {
    box-sizing: border-box;
    border: none;
  }
}

// Appearance
.skc-text-field--outlined {
  border: 1px solid var(--outline);
  border-radius: 0.25rem;

  &:hover {
    border-color: var(--on-surface);
  }

  &:focus-within {
    border-color: var(--primary);
  }

  .skc-text-field__label {
    background-color: var(--background);
  }

  .skc-text-field__input {
    padding: 1rem;
  }

  // (@SiravitPhokeed)
  // We’re not using `[aria-disabled="true"]` here because the `aria-disabled`
  // attribute is on the underlying `<input>`, not `.skc-text-field`, which
  // makes using it in this case a pain in the hindquarters.
  &.skc-text-field--disabled {
    opacity: 0.38;
    color: var(--on-surface);
    border-color: transparent;

    .skc-button[aria-disabled="true"] {
      opacity: 1;
    }

    &::before {
      content: "";
      inset: 0;
      position: absolute;
      opacity: math.div(0.12, 0.38);
      border: 1px solid var(--on-surface);
      border-radius: inherit;
    }

    &:focus-within {
      .skc-text-field__label {
        color: var(--on-surface-variant);
      }
    }
  }
}

.skc-text-field--filled {
  border-bottom: 1px solid var(--outline);
  border-radius: 0.25rem 0.25rem 0 0;
  background-color: var(--surface-variant);

  &::before {
    @include mix.state-layer();
    background-color: var(--on-surface);
  }

  &:hover::before {
    opacity: 0.08;
  }

  &:focus-within {
    border-color: var(--primary);
  }

  .skc-text-field__input {
    padding: 1.5rem 1rem 0.5rem;
  }
}

// Behavior
.skc-text-field--single-line,
.skc-text-field--multi-line {
  .skc-text-field__input {
    height: 3.5rem;
    resize: none;
  }
}

.skc-text-field--textarea {
  .skc-text-field__input {
    height: 6.5rem;
    resize: vertical;
  }
}

.skc-text-field--multi-line,
.skc-text-field--textarea {
  .skc-text-field__leading,
  .skc-text-field__trailing {
    display: flex;
    align-items: center;
    align-self: flex-start;
    height: 3.5rem;
  }
}

// Alignment
.skc-text-field--left .skc-text-field__input {
  text-align: left;
}

.skc-text-field--right {
  .skc-text-field__input {
    text-align: right;
  }

  .skc-text-field__trailing {
    margin-left: 0;
  }
}

.skc-text-field__label {
  @include type.font("body-large");
  font-family: var(--font-display);
  position: absolute;
  z-index: 10;
  inset: 1rem auto auto 0.75rem;
  padding-inline: 0.25rem;
  pointer-events: none;
  color: var(--on-surface-variant);

  .skc-text-field:focus-within & {
    color: var(--primary);
  }

  .skc-text-field:has(.skc-text-field__leading) & {
    left: 2.75rem;
  }
}

// Leading and trailing sections
.skc-text-field__leading,
.skc-text-field__trailing {
  @include type.font("body-large");

  &,
  .skc-button__icon .skc-icon {
    color: var(--on-surface-variant);
  }

  &.skc-button::before {
    background-color: var(--on-surface-variant);
  }
}

.skc-text-field__leading {
  margin-inline: 1rem 0.5rem;
}

.skc-text-field__trailing {
  margin-inline: 0.5rem 1rem;

  .skc-button {
    margin-right: -0.5rem;
  }
}

.skc-text-field__input {
  @include type.font("body-large");
  // (@SiravitPhokeed)
  // For some reason `flex-grow` doesn’t work when inside Columns. The magic of
  // CSS.
  width: 100%;
  color: var(--on-surface);
  background-color: transparent;

  &:focus {
    outline: none;
  }

  .skc-text-field:has(.skc-text-field__leading) & {
    padding-left: 0;
  }

  .skc-text-field:has(.skc-text-field__trailing) & {
    padding-right: 0;
  }
}

.skc-text-field__helper-msg {
  @include type.font("body-small");
  position: absolute;
  inset: auto 0 -2.25rem 1rem;
  height: 2rem;
  color: var(--on-surface-variant);
}
