////
/// **Toggle Button**
/// A Button with just an icon that can be toggled on and off.
////

@use "sass:math";
@use "../abstracts/mixins.scss" as mix;

// Base Toggle Button
.skc-toggle-button {
  @include mix.transition(
    background-color color,
    var(--motion-short-4),
    var(--easing-standard)
  );
  position: relative;
  display: grid;
  overflow: hidden;
  place-content: center;
  padding: 0.5rem;
  cursor: pointer;
  border: 0;
  border-radius: var(--rounded-full);
  background-color: var(--_background-color);
  -webkit-tap-highlight-color: transparent;

  // State layer
  &::before {
    @include mix.state-layer();
    background-color: var(--_foreground-color);
  }

  &:hover::before {
    opacity: 0.08;
  }

  &:focus,
  &:active {
    &::before {
      opacity: 0.12;
    }
  }

  // Disabled
  &[aria-disabled="true"] {
    cursor: default;

    &:hover,
    &:focus,
    &:active {
      // Block state layer effect
      &::before {
        opacity: 0;
      }

      // Block ripple
      > .skc-interactive__ripple {
        background-color: transparent !important;
      }
    }
  }
}

// Icon
.skc-toggle-button .skc-icon {
  color: var(--_foreground-color);

  .skc-toggle-button & {
    @include mix.transition(
      font-variation-settings,
      var(--motion-short-4),
      var(--easing-standard)
    );
    @include mix.icon(0, 400, 0, 24);
  }

  // Hover: make icon bolder
  .skc-toggle-button:not([aria-disabled="true"]):hover & {
    @include mix.icon(0, 600, 0, 24);
  }

  // Active: make icon thinner
  .skc-toggle-button:not([aria-disabled="true"]):active & {
    @include mix.icon(0, 300, 0, 24);
  }

  // Selected: make icon filled
  .skc-toggle-button.skc-toggle-button--selected & {
    @include mix.icon(1, 400, 0, 24);
  }

  // Selected hover: make icon bolder
  .skc-toggle-button.skc-toggle-button--selected:not(
      [aria-disabled="true"]
    ):hover
    & {
    @include mix.icon(1, 600, 0, 24);
  }

  // Selected active: make icon thinner
  .skc-toggle-button.skc-toggle-button--selected:not(
      [aria-disabled="true"]
    ):active
    & {
    @include mix.icon(1, 300, 0, 24);
  }
}

// Ripple
.skc-toggle-button > .skc-interactive__ripple {
  @include mix.ripple();
  background-color: var(--_foreground-color);
}

// Filled Toggle Button
.skc-toggle-button.skc-toggle-button--filled {
  --_foreground-color: var(--primary);
  --_background-color: var(--surface-variant);

  // Selected
  &.skc-toggle-button--selected {
    --_foreground-color: var(--on-primary);
    --_background-color: var(--primary);
  }

  // Dangerous
  &.skc-toggle-button--dangerous {
    --_foreground-color: var(--error);
    --_background-color: var(--error-container);

    .contrast-medium &,
    .contrast-high & {
      --_foreground-color: var(--on-error-container);
      --_background-color: var(--error-container);
    }

    &.skc-toggle-button--selected {
      --_foreground-color: var(--on-error);
      --_background-color: var(--error);
    }
  }

  // Disabled
  &[aria-disabled="true"] {
    opacity: 0.38;
    color: var(--on-surface);
    background-color: transparent;

    &::before {
      opacity: math.div(0.12, 0.38);
      background-color: var(--on-surface);
    }
  }
}

// Tonal Toggle Button
.skc-toggle-button.skc-toggle-button--tonal {
  --_foreground-color: var(--on-surface-variant);
  --_background-color: var(--surface-variant);

  // Selected
  &.skc-toggle-button--selected {
    --_foreground-color: var(--on-secondary-container);
    --_background-color: var(--secondary-container);
  }

  // Dangerous
  &.skc-toggle-button--dangerous {
    --_foreground-color: var(--error);
    --_background-color: var(--error-container);

    .contrast-medium &,
    .contrast-high & {
      --_foreground-color: var(--on-error-container);
      --_background-color: var(--error-container);
    }

    &.skc-toggle-button--selected {
      --_foreground-color: var(--on-error);
      --_background-color: var(--error);
    }
  }

  // Disabled
  &[aria-disabled="true"] {
    opacity: 0.38;
    color: var(--on-surface);
    background-color: transparent;

    &::before {
      opacity: math.div(0.12, 0.38);
      background-color: var(--on-surface);
    }
  }
}

// Outlined Toggle Button
.skc-toggle-button.skc-toggle-button--outlined {
  --_foreground-color: var(--on-surface);
  --_background-color: transparent;
  border: 1px solid var(--outline);

  // Selected
  &.skc-toggle-button--selected {
    --_foreground-color: var(--inverse-on-surface);
    --_background-color: var(--inverse-surface);
    border-color: var(--inverse-surface);
  }

  // Dangerous
  &.skc-toggle-button--dangerous {
    --_foreground-color: var(--error);

    &.skc-toggle-button--selected {
      --_foreground-color: var(--error-container);
    }
  }

  // Disabled
  &[aria-disabled="true"] {
    opacity: 0.38;
    color: var(--on-surface);
    border-color: transparent;

    &::before {
      opacity: math.div(0.12, 0.38);
      border: 1px solid var(--on-surface);
      background-color: transparent;
    }

    // Disabled selected
    &.skc-toggle-button--selected {
      background-color: transparent;

      &::before {
        border-color: transparent;
        background-color: var(--on-surface);
      }
    }
  }
}

// Standard Toggle Button
.skc-toggle-button.skc-toggle-button--standard {
  --_foreground-color: var(--on-surface);
  --_background-color: transparent;

  // Selected
  &.skc-toggle-button--selected {
    --_foreground-color: var(--primary);
  }

  // Dangerous
  &.skc-toggle-button--dangerous {
    --_foreground-color: var(--error);
  }

  // Disabled
  &[aria-disabled="true"] {
    opacity: 0.38;
    color: var(--on-surface);
  }
}
