////
/// **Button**
/// Button helps users take action, whether itâ€™s logging in, liking a post, or
/// going to a page.
////

@use "sass:math";
@use "../abstracts/mixins.scss" as mix;
@use "../abstracts/typography.scss" as type;

// Base Button
.skc-button {
  all: unset;
  font-family: var(--font-display);
  position: relative;
  display: flex;
  overflow: hidden;
  align-items: center;
  flex-direction: row;
  justify-content: center;
  gap: 0.5rem;
  padding: 0.625rem 1.5rem;
  cursor: pointer;
  border-radius: var(--rounded-full);
  -webkit-tap-highlight-color: transparent;

  &[aria-disabled="true"] {
    &:not(:has(.skc-button__label)) {
      &:hover,
      &:focus,
      &:active {
        > .skc-button__icon > .skc-icon {
          @include mix.icon(0, 400, 0, 24);
        }
      }
    }

    &:not(.skc-button--loading) {
      cursor: default;

      &:hover,
      &:focus,
      &:active {
        // Block shadow effect
        box-shadow: none !important;

        // Block state layer effect
        &::before {
          opacity: 0;
        }

        // Block ripple
        > .skc-interactive__ripple {
          background-color: transparent;
        }
      }
    }
  }

  // Icon with label padding
  &:has(.skc-button__icon:first-child):has(.skc-button__label) {
    padding-left: 1rem;
  }

  // With only Icon padding
  &:has(.skc-button__icon):not(:has(.skc-button__label)) {
    padding: 0.5rem;
  }
}

// Ripple
.skc-interactive__ripple {
  @include mix.ripple();
}

// Icon
.skc-button__icon {
  width: 1.25rem;
  height: 1.25rem;

  .skc-button:not(:has(.skc-button__label)) & {
    width: 1.5rem;
    height: 1.5rem;
  }

  .skc-icon {
    @include mix.icon(0, 400, 0, 20);

    .skc-button:not(:has(.skc-button__label)) & {
      @include mix.transition(
        font-variation-settings,
        var(--motion-short-4),
        var(--easing-standard)
      );
      @include mix.icon(0, 400, 0, 24);
    }

    // Hover: make icon bolder
    .skc-button:not(:has(.skc-button__label)):hover & {
      @include mix.icon(0, 600, 0, 24);
    }

    // Active: make icon thinner
    .skc-button:not(:has(.skc-button__label)):active & {
      @include mix.icon(0, 300, 0, 24);
    }
  }
}

// Label
.skc-button__label {
  @include type.font("label-large");
  font-family: var(--font-display);

  .skc-button:not(:has(.skc-button__icon)) & {
    text-align: center;
  }
}

// Loading
.skc-button.skc-button--loading {
  padding-inline: 0;

  .skc-actions--full & {
    padding-inline: 1rem;
  }

  > .skc-progress {
    &.skc-progress--linear .skc-progress__track {
      width: 2rem;
      margin-block: 0.5rem;
    }

    &.skc-progress--circular {
      width: 1.25rem;
      height: 1.25rem;

      .skc-progress__indicator {
        stroke: currentColor;
      }
    }
  }
}

// Filled Button
.skc-button.skc-button--filled {
  @include mix.transition(
    box-shadow,
    var(--motion-short-4),
    var(--easing-standard)
  );
  color: var(--on-primary);
  background-color: var(--primary);

  // States
  &::before,
  .skc-interactive__ripple {
    background-color: var(--on-primary);
  }

  &:hover {
    box-shadow: var(--shadow-1);
  }

  &:active {
    box-shadow: none;
  }

  // Dangerous
  &.skc-button--dangerous {
    color: var(--on-error);
    background-color: var(--error);

    &::before,
    .skc-interactive__ripple {
      background-color: var(--on-error);
    }
  }

  // Disabled
  &:not(.skc-button--loading)[aria-disabled="true"] {
    opacity: 0.38;
    color: var(--on-surface);
    background-color: transparent;

    &::before {
      opacity: math.div(0.12, 0.38);
      background-color: var(--on-surface);
    }
  }
}

// Tonal Button
.skc-button.skc-button--tonal {
  @include mix.transition(
    box-shadow,
    var(--motion-short-4),
    var(--easing-standard)
  );
  color: var(--on-secondary-container);
  background-color: var(--secondary-container);

  // States
  &::before,
  .skc-interactive__ripple {
    background-color: var(--on-secondary-container);
  }

  &:hover::before {
    opacity: 0.08;
  }

  &:focus,
  &:active {
    &::before {
      opacity: 0.12;
    }
  }

  &:hover {
    box-shadow: var(--shadow-1);
  }

  &:active {
    box-shadow: none;
  }

  // Dangerous
  &.skc-button--dangerous {
    color: var(--on-error-container);
    background-color: var(--error-container);

    &::before,
    .skc-interactive__ripple {
      background-color: var(--on-error-container);
    }
  }

  // Disabled
  &:not(.skc-button--loading)[aria-disabled="true"] {
    opacity: 0.38;
    color: var(--on-surface);
    background-color: transparent;

    &::before {
      opacity: math.div(0.12, 0.38);
      background-color: var(--on-surface);
    }
  }
}

// Outlined Button
.skc-button.skc-button--outlined {
  @include mix.transition(
    border-color,
    var(--motion-short-4),
    var(--easing-standard)
  );
  color: var(--primary);
  border: 1px solid var(--outline);

  // States
  &::before,
  .skc-interactive__ripple {
    background-color: var(--primary);
  }

  &:focus {
    z-index: 10;
    border-color: var(--primary);
  }

  // Selected
  &.skc-button--selected {
    color: var(--on-secondary-container);
    background-color: var(--secondary-container);

    &::before,
    .skc-interactive__ripple {
      background-color: var(--on-secondary-container);
    }

    &:focus {
      border-color: var(--secondary);
    }
  }

  // Dangerous
  &.skc-button--dangerous {
    color: var(--error);

    &::before,
    .skc-interactive__ripple {
      background-color: var(--error);
    }

    &:focus {
      border-color: var(--error);
    }
  }

  // Disabled
  &:not(.skc-button--loading)[aria-disabled="true"] {
    opacity: 0.38;
    color: var(--on-surface);
    border-color: transparent;

    &::before {
      opacity: math.div(0.12, 0.38);
      border: 1px solid var(--on-surface);
      background-color: transparent;
    }
  }
}

// Text Button
.skc-button.skc-button--text {
  color: var(--primary);

  // States
  &::before,
  .skc-interactive__ripple {
    background-color: var(--primary);
  }

  &:hover::before {
    opacity: 0.08;
  }

  &:focus,
  &:active {
    &::before {
      opacity: 0.12;
    }
  }

  &:focus {
    border-color: var(--primary);
  }

  // Dangerous
  &.skc-button--dangerous {
    color: var(--error);

    &::before,
    .skc-interactive__ripple {
      background-color: var(--error);
    }

    &:focus {
      border-color: var(--error);
    }
  }

  // Disabled
  &[aria-disabled="true"] {
    &:not(.skc-button--loading) {
      opacity: 0.38;
      color: var(--on-surface);
    }

    &::before {
      background-color: transparent;
    }
  }

  // With label padding
  &:has(.skc-button__label) {
    padding: 0.625rem 0.75rem;

    // With Icon padding
    &:has(.skc-button__icon:first-child) {
      padding-left: 0.75rem;
    }
  }
}
